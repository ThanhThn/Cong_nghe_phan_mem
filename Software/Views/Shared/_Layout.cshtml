@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject IHttpContextAccessor HttpContextAccessor

@{
    var username = HttpContextAccessor?.HttpContext?.Session.GetString("Username");
    var danhSachDuongDan = HttpContextAccessor?.HttpContext?.Session.GetObject<List<string>>("DanhSachDuongDan");
    var danhSachDuongDanJson = JsonConvert.SerializeObject(danhSachDuongDan);
}

@* @if (string.IsNullOrEmpty(username))
{
    <script>
        window.location.href = "/Login/Index";
    </script>
}
@*
@if (!string.IsNullOrEmpty(username))
{
    <script>
        let accept = false;
        let url = window.location.href;
        let baseUrl = window.location.origin + "/";
        if(url != baseUrl){
            let listLink = @Html.Raw(danhSachDuongDanJson);
            for (let i = 0; i < listLink.length; i++) {
                let regEx = new RegExp(listLink[i]);
                if (regEx.test(url)) {
                    accept = true;
                    break;
                }
            }
            if(!accept){
                window.location.href = baseUrl
            }
        }
    </script>
           this.password.BackColor = System.Drawing.Color.White;
            this.password.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(31)))), ((int)(((byte)(30)))), ((int)(((byte)(48)))));
            this.password.BorderFocusColor = System.Drawing.Color.FromArgb(((int)(((byte)(31)))), ((int)(((byte)(30)))), ((int)(((byte)(48)))));
            this.password.BorderRadius = 16;
            this.password.BorderSize = 2;
            this.password.Enable = true;
            this.password.Font = new System.Drawing.Font("Inter Medium", 11F);
            this.password.ForeColor = System.Drawing.Color.Black;
            this.password.Location = new System.Drawing.Point(385, 236);
            this.password.Multiline = false;
            this.password.Name = "password";
            this.password.Padding = new System.Windows.Forms.Padding(14, 6, 14, 6);
            this.password.PasswordChar = false;
            this.password.PlaceholderColor = System.Drawing.Color.Black;
            this.password.PlaceholderText = "";
            this.password.Size = new System.Drawing.Size(375, 32);
            this.password.TabIndex = 9;
            this.password.Texts = "";
            this.password.UnderlinedStyle = false;
}*@


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Software</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Software.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/output.css" asp-append-version="true" />
</head>
<body class="bg-Cultured">
    <div class="w-28 bg-Jaguar h-screen fixed top-0 left-0">
    </div>
    <div class="ml-28 relative">
        @RenderBody()
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
